import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:go_router/go_router.dart';
import '../../providers/book_provider.dart';
import '../../models/book_model.dart';
import '../../core/constants/app_colors.dart';
import '../../widgets/common/loading_widget.dart';

class SeedDataScreen extends StatefulWidget {
  const SeedDataScreen({super.key});

  @override
  State<SeedDataScreen> createState() => _SeedDataScreenState();
}

class _SeedDataScreenState extends State<SeedDataScreen> {
  bool _isLoading = false;

  final List<Map<String, dynamic>> _sampleBooks = [
    {
      'title': 'The Great Gatsby',
      'author': 'F. Scott Fitzgerald',
      'description':
          'A classic American novel set in the summer of 1922, following Nick Carraway\'s interactions with his mysterious neighbor Jay Gatsby.',
      'category': 'Fiction',
      'coverImageUrl':
          'https://images.unsplash.com/photo-1543002588-bfa74002ed7e?ixlib=rb-4.0.3&w=300',
      'fileUrl': 'https://www.gutenberg.org/files/64317/64317-h/64317-h.htm',
      'price': 0.0,
      'isFree': true,
      'isPremium': false,
      'fileType': 'html',
      'fileSizeInMB': 0.5,
    },
    {
      'title': 'Flutter Development Guide',
      'author': 'Tech Guru',
      'description':
          'Complete guide to Flutter development covering widgets, state management, and best practices.',
      'category': 'Technology',
      'coverImageUrl':
          'https://images.unsplash.com/photo-1555066931-4365d14bab8c?ixlib=rb-4.0.3&w=300',
      'fileUrl': 'https://example.com/flutter-guide.pdf',
      'price': 19.99,
      'isFree': false,
      'isPremium': true,
      'fileType': 'pdf',
      'fileSizeInMB': 15.2,
    },
    {
      'title': 'The Art of Programming',
      'author': 'Code Master',
      'description':
          'Learn the fundamentals of programming with practical examples and exercises.',
      'category': 'Technology',
      'coverImageUrl':
          'https://images.unsplash.com/photo-1515879218367-8466d910aaa4?ixlib=rb-4.0.3&w=300',
      'fileUrl': 'https://example.com/programming-art.pdf',
      'price': 12.99,
      'isFree': false,
      'isPremium': false,
      'fileType': 'pdf',
      'fileSizeInMB': 8.7,
    },
    {
      'title': 'Pride and Prejudice',
      'author': 'Jane Austen',
      'description':
          'A romantic novel that follows the character development of Elizabeth Bennet.',
      'category': 'Romance',
      'coverImageUrl':
          'https://images.unsplash.com/photo-1481627834876-b7833e8f5570?ixlib=rb-4.0.3&w=300',
      'fileUrl': 'https://www.gutenberg.org/files/1342/1342-h/1342-h.htm',
      'price': 0.0,
      'isFree': true,
      'isPremium': false,
      'fileType': 'html',
      'fileSizeInMB': 1.2,
    },
    {
      'title': 'Space Exploration',
      'author': 'Dr. Astronomer',
      'description':
          'Journey through the cosmos and discover the wonders of space exploration.',
      'category': 'Science',
      'coverImageUrl':
          'https://images.unsplash.com/photo-1446776653964-20c1d3a81b06?ixlib=rb-4.0.3&w=300',
      'fileUrl': 'https://example.com/space-exploration.pdf',
      'price': 24.99,
      'isFree': false,
      'isPremium': true,
      'fileType': 'pdf',
      'fileSizeInMB': 22.5,
    },
    {
      'title': 'Cooking Masterclass',
      'author': 'Chef Excellence',
      'description':
          'Master the art of cooking with step-by-step recipes and techniques.',
      'category': 'Self-Help',
      'coverImageUrl':
          'https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?ixlib=rb-4.0.3&w=300',
      'fileUrl': 'https://example.com/cooking-masterclass.pdf',
      'price': 15.99,
      'isFree': false,
      'isPremium': false,
      'fileType': 'pdf',
      'fileSizeInMB': 12.3,
    },
  ];

  Future<void> _seedData() async {
    setState(() => _isLoading = true);

    try {
      final bookProvider = Provider.of<BookProvider>(context, listen: false);

      for (var bookData in _sampleBooks) {
        final book = BookModel(
          id: '', // Will be generated by Firestore
          title: bookData['title'],
          author: bookData['author'],
          description: bookData['description'],
          category: bookData['category'],
          coverImageUrl: bookData['coverImageUrl'],
          fileUrl: bookData['fileUrl'],
          price: bookData['price'],
          isFree: bookData['isFree'],
          isPremium: bookData['isPremium'],
          publishedDate: DateTime.now(),
          downloadCount: 0,
          favoriteCount: 0,
          rating: 0.0,
          fileType: bookData['fileType'],
          fileSizeInMB: bookData['fileSizeInMB'],
          createdAt: DateTime.now(),
          updatedAt: DateTime.now(),
        );

        // Note: Since we don't have actual files, we'll add books directly to Firestore
        // In real implementation, you would use bookProvider.addBook() with actual files
        await bookProvider.addBookDirectly(book);

        // Add small delay to avoid overwhelming Firestore
        await Future.delayed(const Duration(milliseconds: 500));
      }

      if (mounted) {
        ScaffoldMessenger.of(context).showSnackBar(
          const SnackBar(
            content: Text('Sample books added successfully!'),
            backgroundColor: AppColors.success,
          ),
        );
        context.pop();
      }
    } catch (e) {
      if (mounted) {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(
            content: Text('Error adding sample books: $e'),
            backgroundColor: AppColors.error,
          ),
        );
      }
    } finally {
      setState(() => _isLoading = false);
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: AppColors.background,
      appBar: AppBar(
        backgroundColor: AppColors.surface,
        title: const Text('Seed Sample Data'),
        leading: IconButton(
          icon: const Icon(Icons.arrow_back),
          onPressed: () => context.pop(),
        ),
      ),
      body: Padding(
        padding: const EdgeInsets.all(24.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            const Text(
              'Sample Books',
              style: TextStyle(
                fontSize: 24,
                fontWeight: FontWeight.bold,
                color: Colors.white,
              ),
            ),
            const SizedBox(height: 8),
            const Text(
              'This will add sample books to your Firebase database for testing purposes.',
              style: TextStyle(fontSize: 16, color: AppColors.textSecondary),
            ),

            const SizedBox(height: 32),

            // Sample Books List
            Expanded(
              child: ListView.builder(
                itemCount: _sampleBooks.length,
                itemBuilder: (context, index) {
                  final book = _sampleBooks[index];
                  return Card(
                    color: AppColors.surface,
                    margin: const EdgeInsets.only(bottom: 16),
                    child: ListTile(
                      leading: Container(
                        width: 40,
                        height: 60,
                        decoration: BoxDecoration(
                          borderRadius: BorderRadius.circular(4),
                          image: DecorationImage(
                            image: NetworkImage(book['coverImageUrl']),
                            fit: BoxFit.cover,
                          ),
                        ),
                      ),
                      title: Text(
                        book['title'],
                        style: const TextStyle(
                          color: Colors.white,
                          fontWeight: FontWeight.bold,
                        ),
                      ),
                      subtitle: Text(
                        'by ${book['author']} â€¢ ${book['category']}',
                        style: const TextStyle(color: AppColors.textSecondary),
                      ),
                      trailing: Container(
                        padding: const EdgeInsets.symmetric(
                          horizontal: 8,
                          vertical: 4,
                        ),
                        decoration: BoxDecoration(
                          color: book['isFree']
                              ? AppColors.success
                              : AppColors.warning,
                          borderRadius: BorderRadius.circular(12),
                        ),
                        child: Text(
                          book['isFree'] ? 'FREE' : '\$${book['price']}',
                          style: const TextStyle(
                            color: Colors.white,
                            fontSize: 12,
                            fontWeight: FontWeight.bold,
                          ),
                        ),
                      ),
                    ),
                  );
                },
              ),
            ),

            const SizedBox(height: 24),

            // Add Sample Data Button
            SizedBox(
              width: double.infinity,
              height: 50,
              child: ElevatedButton(
                onPressed: _isLoading ? null : _seedData,
                child: _isLoading
                    ? const LoadingWidget()
                    : const Text(
                        'Add Sample Books',
                        style: TextStyle(
                          fontSize: 16,
                          fontWeight: FontWeight.bold,
                        ),
                      ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}
